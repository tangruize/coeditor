Coeditor help text

 The Coeditor is designed to generate edit operation sequences automatically
 and apply operations from OT functions.  There are four main sections of the
 editor.  The top line shows the algorithm version, the current filename being
 edited, and whether or not the file has been modified.  Next is the main
 editor window showing the file being edited.  The status line is the third
 line from the bottom and shows important messages.  The bottom two lines
 show the most commonly used shortcuts in the editor.
 
 The notation for shortcuts is as follows: Control-key sequences are notated
 with a caret (^) symbol and can be entered by using the Control (Ctrl) key.

^G            Display this help text
^X            Close the current file buffer / Exit from Coeditor
^W            Write the current file to disk
^C            Display the position of the cursor

^L            Refresh screen
^U            Synchronize queued sending operations
^K            Apply queued received operations
^S            Synchronize all queued operations immediately

^T            Go to line and column number
^O            Go to file offset
^Y            Go to previous screen
^V            Go to next screen

^P            Go to previous line
^N            Go to next line
^A            Go to beginning of current line
^E            Go to end of current line

^F            Go forward one character
^B            Go back on character
^D            Alternative Delete key
^H            Alternative Backspace key

^Z            Suspend the editor
^R            Troggle edit mode and view mode


Coeditor command line arguments

 Invoke Coeditor without any arguments will create a new buf, and you can save
 your modifications later.  If you provide a file name, Coeditor will check
 file existence and permissions.  If file does not exist, Coeditor will create
 it while saving. 

 Coeditor supports 9 options up to now:

-c server-address        Establish a connection with Jupiter server
-t sec(float)            Delay time before sending (default 0)
-T sec(float)            Delay time before receiving (default 0)
-a cscw/css              Specify an algorithm (default determined by libalgo)
-s                       Algorithm processes local and server simultaneously
-w                       CLI not to write OP ouput fifo (default write)
-p                       OP ouput using (row, col) (default file offset)
-l                       Start CLI thread (default not)
-d                       Redirect debug (stderr) to file (default throw away)


Coeditor opened files description

 Coeditor creates several files.  They are named with ".coeditor.[FILENAME].
 [PID]." prefix.  You need invoke program with "-ld" arguments to get all
 entries of below files.

 SUFFIX explanation: 
 [PW] for pipe write end, [PR] for pipe read end, [F] for regular file.
 You should open PW in write-only mode and PR vice versa.

[SUFFIX]                 [TYPE]  [DESCRIPTION]
cli                      PW      Command del, ins, save and print interface.
debug                    F       Standard error output.


CLI command format

 Generally, UPPERCASE uses offset while lowercase uses (row, col) to address.

D offset                 Delete character at offset
I offset char            Insert character at offset

d row col                Delete character at (row, col)
i row col char           Insert character at (row, col)

p [lineno, [n]]          Print n lines from lineno
s [filename]             Save to filename

u                        Upload local operations immediately
r                        Receive server operations immediately
l                        Synchronize all operations immediately


Text format

 A text file looks like this:

    1  2  3  4  5  6  7  8      [LINESIZE]
 1  a  b  c  d  e  \n               5
 2  f  g  h  i  j  \n               5
 3  k  l  m  n  o  p  q  \n         7
 4                                  0

 For (row, col) format, addressing range for a line is [1, linesize+1]. Note
 that newline character ('\n') is the end of the line. So you cannot delete
 at linesize+1 of last line (line 4), but you can insert at that position.

 The last line is called break line if it hasn't newline charater. (No line 4 
 in this example).  You can edit the last newline character in Coeditor.

 For offset format, addressing range is [0, filesize].  You can insert but
 cannot delete at filesize.


Local/Server I/O format

 A local I/O is 12 bytes while a server I/O is 20 byte.  For details, please
 see 'include/op.h' file.
